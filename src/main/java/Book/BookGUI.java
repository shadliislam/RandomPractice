package Book;
import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;

public class BookGUI implements ActionListener {
    private JPanel panel1;
    private JButton saveButton;
    private JTextPane nameTextPane;
    private JTextField bookName;
    private JTextPane priceTextPane;
    private JRadioButton fictionRadioButton;
    private JRadioButton nonFictionRadioButton;
    private JTextPane showTextPane;
    private JTextField price;
    private JComboBox comboBox1;
    private JTextArea textArea1;
    String type = "";
    List<Book> myBookList = new ArrayList<Book>();

    static private String selectedString(ItemSelectable is) {
        Object selected[] = is.getSelectedObjects();
        return ((selected.length == 0) ? "null" : (String) selected[0]);
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("BookGUI");
        frame.setContentPane(new BookGUI().panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }

    public BookGUI() {
        this.myBookList = new ArrayList<Book>();
        $$$setupUI$$$();
        bookName.setText("abc");
        price.setText("23.2");
        final ButtonGroup group = new ButtonGroup();
        group.add(fictionRadioButton);
        group.add(nonFictionRadioButton);
        saveButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.out.println("Save.....");
                String name = bookName.getText();
                String priceStr = price.getText();
                String bookType = "";
                {
                    Enumeration<AbstractButton> allRadioButton = group.getElements();
                    while (allRadioButton.hasMoreElements()) {
                        JRadioButton temp = (JRadioButton) allRadioButton.nextElement();
                        if (temp.isSelected()) {
                            JOptionPane.showMessageDialog(null, "You selected : " + temp.getText());
                            System.out.println("You selected : " + temp.getText());
                            bookType = temp.getText();
                        }
                    }
                }
                if (fictionRadioButton.isSelected()) {
                    type = "Fiction";
                    Book book = new Fiction(name);
                    book.setPrice(Double.parseDouble(priceStr));
                    myBookList.add(book);
                } else if (nonFictionRadioButton.isSelected()) {
                    type = "Non-Fiction";
                    Book book = new NonFiction(name);
                    book.setPrice(Double.parseDouble(priceStr));
                    myBookList.add(book);
                }
                /*else {
                    type = "NO Button selected";
                }*/

                double price = Double.parseDouble(priceStr);

                //System.out.println("Name: " + name + ", price: " + price + ", Type: " + type);

            }
        });
        ItemListener itemListener = new ItemListener() {
            public void itemStateChanged(ItemEvent itemEvent) {
                int state = itemEvent.getStateChange();
                System.out.print((state == ItemEvent.SELECTED) ? "Selected: " : "Deselected: ");
                System.out.println(itemEvent.getItem());
                ItemSelectable is = itemEvent.getItemSelectable();
                type = selectedString(is);
                System.out.println("This is your type boss: " + type);
                String toDisplay = "";// = "Name: " + bookName.getText() + ", price: " + price.getText() + ", Type: " + type+"\n";
                for (Book book : myBookList) {
                    System.out.println(book);
                    //toDisplay+ = "Name: " + book.getBookTitle() + ", price: " + book.getBookPrice() + ", Type: " + book.+"\n";
                    if (type.equalsIgnoreCase("fiction") && book instanceof Fiction) {
                        toDisplay += book.toString() + "\n";
                    }
                    if (type.equalsIgnoreCase("Non Fiction") && book instanceof NonFiction) {
                        toDisplay += book.toString() + "\n";
                    }
                    if (type.equalsIgnoreCase("All")) {
                        toDisplay += book.toString() + "\n";
                    }

                }
                textArea1.setText(toDisplay);

            }
        };
        comboBox1.addItemListener(itemListener);

        textArea1.addComponentListener(new ComponentAdapter() {
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(6, 4, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBorder(BorderFactory.createTitledBorder(null, "Book.Book", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, this.$$$getFont$$$(null, -1, -1, panel1.getFont()), new Color(-4473925)));
        nameTextPane = new JTextPane();
        nameTextPane.setText("Name");
        panel1.add(nameTextPane, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 25), null, 0, false));
        priceTextPane = new JTextPane();
        priceTextPane.setText("Price");
        panel1.add(priceTextPane, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 50), null, 0, false));
        bookName = new JTextField();
        panel1.add(bookName, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, 25), null, 0, false));
        saveButton = new JButton();
        saveButton.setText("Save");
        panel1.add(saveButton, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        showTextPane = new JTextPane();
        showTextPane.setText("Show");
        panel1.add(showTextPane, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 3, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        price = new JTextField();
        panel1.add(price, new com.intellij.uiDesigner.core.GridConstraints(1, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        comboBox1 = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("All");
        defaultComboBoxModel1.addElement("Fiction");
        defaultComboBoxModel1.addElement("Non Fiction");
        comboBox1.setModel(defaultComboBoxModel1);
        panel1.add(comboBox1, new com.intellij.uiDesigner.core.GridConstraints(4, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        Font fictionRadioButtonFont = this.$$$getFont$$$("Arial Black", Font.BOLD, 12, fictionRadioButton.getFont());
        if (fictionRadioButtonFont != null) fictionRadioButton.setFont(fictionRadioButtonFont);
        fictionRadioButton.setText("fiction");
        panel1.add(fictionRadioButton, new com.intellij.uiDesigner.core.GridConstraints(2, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nonFictionRadioButton = new JRadioButton();
        Font nonFictionRadioButtonFont = this.$$$getFont$$$("Arial Black", Font.BOLD, 12, nonFictionRadioButton.getFont());
        if (nonFictionRadioButtonFont != null) nonFictionRadioButton.setFont(nonFictionRadioButtonFont);
        nonFictionRadioButton.setText("non-fiction");
        panel1.add(nonFictionRadioButton, new com.intellij.uiDesigner.core.GridConstraints(2, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        textArea1 = new JTextArea();
        panel2.add(textArea1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(nonFictionRadioButton);
        buttonGroup.add(fictionRadioButton);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    public void actionPerformed(ActionEvent e) {

    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        fictionRadioButton = new JRadioButton("fiction");
        fictionRadioButton.setMnemonic(KeyEvent.VK_B);
        fictionRadioButton.setActionCommand("fiction");
        fictionRadioButton.setSelected(true);

        nonFictionRadioButton = new JRadioButton("non-fiction");
        nonFictionRadioButton.setActionCommand("non-fiction");

        final ButtonGroup group = new ButtonGroup();
        group.add(fictionRadioButton);
        group.add(nonFictionRadioButton);

        fictionRadioButton.addActionListener(this);
        nonFictionRadioButton.addActionListener(this);

    }
}


